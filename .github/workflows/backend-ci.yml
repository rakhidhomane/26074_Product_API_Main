name: Backend CI/CD - Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev
      - 'feature/*'
      - 'release/*'
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  backend-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout source code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build backend
      - name: Build backend with Maven
        #working-directory: ./ProductApp-API-main
        run: mvn clean package -DskipTests=false

      # Run unit tests
      - name: Run unit tests
        #working-directory: ./ProductApp-API-main
        run: mvn test

      # SonarCloud Scan
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=almcybage_26074-product-api-main \
            -Dsonar.projectName=almcybage_26074-product-api-main \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
       # SonarCloud Scan
      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    
      # Docker login
      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Build Docker image
      - name: Build backend Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/product-app-backend .

       # Scan backend image
      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/product-app-backend
          format: json
          output: trivy-report.json
          exit-code: 1
          severity: CRITICAL,HIGH

      # Upload Trivy scan report
      - name: Upload Trivy scan report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-backend-report
          path: trivy-report.json

      # Push backend image
      - name: Push backend image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/product-app-backend
