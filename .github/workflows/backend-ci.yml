name: Backend CI/CD - Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev
      - 'feature/*'
      - 'release/*'
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  backend-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout source code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build backend
      - name: Build backend with Maven
        #working-directory: ./ProductApp-API-main
        run: mvn clean package -DskipTests=false

      # Run unit tests
      - name: Run unit tests
        #working-directory: ./ProductApp-API-main
        run: mvn test

      # SonarCloud Scan
      - name: SonarCloud Scan
        #working-directory: ./ProductApp-API-main
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=rakhidhomane_26074_Product_API_Main \
            -Dsonar.projectName=rakhidhomane_26074_Product_API_Main \
            -Dsonar.organization=rakhidhomane \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            
       # Step 6: Check SonarCloud Quality Gate
      - name: Check SonarCloud Quality Gate
        id: quality-gate
        continue-on-error: true 
        run: |
          echo "Checking SonarCloud Quality Gate status..."
          sleep 30 # wait for SonarCloud to process
          response=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=rakhidhomane_ThreeTierAppProductAPI")
          status=$(echo $response | jq -r '.projectStatus.status')
          if [ "$status" = "OK" ]; then
            echo "Quality Gate status: SUCCESS"
            echo "QUALITY_GATE_STATUS=SUCCESS" >> $GITHUB_ENV
          else
            echo "Quality Gate status: FAILED"
            echo "QUALITY_GATE_STATUS=FAILED" >> $GITHUB_ENV
            exit 1
          fi
      # Docker login
      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Build Docker image
      - name: Build backend Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/product-app-backend .

      # Scan backend image
      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/product-app-backend
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH

      # Push backend image
      - name: Push backend image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/product-app-backend
